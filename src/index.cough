{ extend }           = require './utilities'
getAspenInitializer  = require './getAspenInitializer'
getChannelConnectors = require './getChannelConnectors'
getPortConnector     = require './getPortConnector'
getRegistrationUtils = require './getRegistrationUtils'

getReactiveAspen = (renderToDOM, connectTo, EventManager) ->
  { createEventStreamBus, createNonInitPropertyBus } = EventManager.factories
  { blockTillReady, connect, doAsync, onValue }      = EventManager.utilities

  config1             = { connect, createEventStreamBus, createNonInitPropertyBus }
  registrationUtils   = getRegistrationUtils config1
  getDispatcher       = registrationUtils.getDispatcher
  getEventStream      = registrationUtils.getEventStream
  getProperty         = registrationUtils.getProperty

  appStateProperty    = getProperty '_appState_'
  terminusEventStream = getEventStream '_terminus_'

  config2             = { connect, getDispatcher, onValue, terminusEventStream }
  connectors          = getChannelConnectors config2
  push                = connectors.push

  portConnector       = getPortConnector (getEventStream, getProperty)
  connectPortsToBuses = portConnector.connectPortsToBuses
  relayReactEvents    = portConnector.relayReactEvents

  initialize = getAspenInitializer {
    appStateProperty
    blockTillReady
    connectPortsToBuses
    connectViewToController : -> connectTo relayReactEvents
    doAsync
    onValue
    push
    renderToDOM
    terminusEventStream
  }

  Controller = extend ({}, connectors, registrationUtils)

  { appStateProperty, Controller, initialize }

module.exports = getReactiveAspen
