{ blockTillReady, doAsync, onValue } = require('../pando/pando').utilities
{ connect, getEventStream, getProperty } = require '../controller/exports'

{ identity }    = require '../utilities'
linkTogetherMVC = require './linkTogetherMVC'
{ render }      = require('../react-module/exports').React

[appNodeId, appState, topViewFactory] =
  ['app-node-id', 'app-state', 'top-view-factory'].map getProperty

_getElementById  = doAsync (document.getElementById.bind document)
_linkTogetherMVC = doAsync linkTogetherMVC
TERMINUS         = 'terminus'

# Rewrite to use pando directly.
plugIntoTerminus = \observable ->
  connect observable TERMINUS (-> identity)

# connectToTerminus = \observable \thunk ->
#   connect observable TERMINUS thunk
# mapToTerminus = \observable \thunk ->
#   connect observable TERMINUS (-> mapping (thunk ()))

resetAppState = \transform ->
  node        = _getElementById appNodeId
  newAppState = doAsync transform appState
  component   = _linkTogetherMVC (topViewFactory, newAppState)
  blockTillReady render (component, node)

onValue (getEventStream 'terminus') (blockTillReady resetAppState)

module.exports = { plugIntoTerminus }
