{ checkValue, mapping, merge, remerse } = require '../pando.js'
{ compose, identity, isArray, useParamListOrArray } = require '../utilities.js' 
{ interpret } = './channel-connectors.js'

mapMapping = \array ->
  array.map mapping

mappingCompose = 
  useParamListOrArray ((args...) -> compose (mapMapping args))

_merge = \target \sources ->
  merge (interpret target) (sources.map interpret)

_remerse = \dispatcherFactory \fn \source ->
  remerse dispatcherFactory fn (interpret source)

[remerseES, remerseP] =
  [createEventStream, createNonInitProperty].map _remerse

sample = \propertyRef ->
  checkValue identity (interpret propertyRef)

sampling = \ref ->
  mapping (-> sample ref)

module.exports = {
  mapMapping
  mappingCompose
  merge   : _merge
  remerse : _remerse
  remerseES
  remerseP
  sample
  sampling
}
