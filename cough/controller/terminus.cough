{ connect }                     = require './channel-connectors.js'
{ getEventStream, getProperty } = require './channel-registrar.js'
{ identity }                    = require '../utilities.js'
linkTogetherMVC                 = require './linkTogetherMVC.js'
Pando                           = require '../pando.js'
{ React }                       = require '../react-module/exports.js'

{ blockTillReady, checkValue, $onValue } = Pando

appState         = getProperty 'app-state'
APP_DOM_ID       = 'todoapp'
getElementById   = document.getElementById if ? document
renderComponent  = React.renderComponent
_linkTogetherMVC = checkValue linkTogetherMVC
TERMINUS         = 'terminus'
topViewFactory   = getProperty 'top-view-factory'

plugIntoTerminus = \observable ->
  connect observable TERMINUS identity

resetAppState = \transform ->
  node = getElementById APP_DOM_ID
  newAppState = checkValue transform appState
  component = _linkTogetherMVC (topViewFactory, newAppState)
  blockTillReady renderComponent (component, node)

$onValue (getEventStream 'terminus') (blockTillReady resetAppState)

module.exports = { plugIntoTerminus }
