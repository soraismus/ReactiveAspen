{ appStateProperty, terminusEventStream }        = require './aspen-state'
{ blockTillReady, doAsync, onValue }             = require './pando/utilities'
{ connect, getEventStream, getProperty, push }   = require './controller/exports'
{ connectPortsToBuses, connectViewToController } = require './adapter/exports'
render                                           = require './react/render'

node            = null
_topViewFactory = null

initialize = (appNodeID, topViewFactory, initialAppState, viewImports) ->
  node = document.getElementById appNodeID
  _topViewFactory = topViewFactory

  topReactDescriptor = linkTogetherMVC (topViewFactory, initialAppState)
  render (topReactDescriptor, (document.getElementById appNodeID))
  connectPortsToBuses viewImports

linkTogetherMVC = (topViewFactory, appState) ->
  push appStateProperty appState         # Connect model and controller.
  reactElement = topViewFactory appState # Connect model and view.
  connectViewToController ()             # Connect view and controller.
  reactElement

resetAppState = \transform ->
  newAppState  = doAsync transform appStateProperty
  reactElement = _linkTogetherMVC (_topViewFactory, newAppState)
  _render (reactElement, node)

_linkTogetherMVC = doAsync linkTogetherMVC
_render          = blockTillReady render

onValue terminusEventStream (blockTillReady resetAppState)

module.exports = initialize
